version: '3.8'

services:
  db:
    image: postgres
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: '${DB_ADMIN}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
  elasticsearch:
    image: elasticsearch:7.9.1
    environment:
      discovery.type: single-node
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
  api:
    build: api_server
    command:
      ['rails', 'server', '-b', '0.0.0.0', '-p', '80', '-e', 'development']
    environment:
      SERVICE_NAME: api
      DB_HOST: '${DB_HOST}'
      DB_ADMIN: '${DB_ADMIN}'
      DB_PASSWORD: '${DB_PASSWORD}'
      ELASTICSEARCH_URL: elasticsearch
    volumes:
      - ./api_server:/app
    depends_on:
      - db
      - elasticsearch
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.entrypoints=web'
      - 'traefik.http.routers.api.rule=PathPrefix(`/graphql`, `/graphiql`, `/assets`)'
  web:
    build: web
    command: ['yarn', 'run', 'dev', '-p', '80']
    environment:
      GRAPHQL_URL: http://api/graphql
    volumes:
      - ./web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.web.entrypoints=web'
      - 'traefik.http.routers.web.rule=PathPrefix(`/`)'
  gateway:
    image: traefik:2.3
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
    ports:
      - '3000:80'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

volumes:
  db:
  elasticsearch:
